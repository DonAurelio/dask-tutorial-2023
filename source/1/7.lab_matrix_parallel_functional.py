#!/usr/bin/env python
# coding: utf-8

# ### Parallel programming approach: Functional decomposition (Dask Delayed)
# 
# *Hint: Remember, you will need to adjust the code to be able to apply functional decomposition. You can copy useful code snippets from the notebook.*

# __1. Import required libraries, define required variables and functions__
# 
# _Hint: define the shape to be (1000,1000), define `squared`, `add`, `subtract`, and `mult` functions to replace `**`, `+`, `-` and `*`_

import numpy as np
import dask

shape = # ...

# ...

# ...

# ...

# ...


# __2. Create arrays using Numpy__

x = # ...
y = # ...


# __3. Write the equation in terms of functions__
# 
# _Hint: you just need to write the equation $z = (x^2 + y^2) * (x^2 - y^2)$ in Python language, but using `squared`, `add`, `substract`, and `mult` functions in place of `**`, `+`, `-` and `*`. It will be easier if you assign the result of a function to a new variable, for example: `a`, `b`, `c`, ..._

a = # ...
b = # ... 
c = # ...
d = # ...
e = # ...
e

# __4. Parallelize the previous functions using `Dask Delayed`__

a = # ...
b = # ... 
c = # ...
d = # ...
e = # ...

# __4. Compute the result of the equation using `compute` on $e$__

# ...
